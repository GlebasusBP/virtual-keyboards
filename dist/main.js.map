{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/script/addKeys.js","webpack://my-webpack-project/./src/script/createKeys.js","webpack://my-webpack-project/./src/script/arrKeys.js","webpack://my-webpack-project/./src/script/page.js","webpack://my-webpack-project/./src/script/createKeyboard.js"],"sourcesContent":["// import \"../sass/key.scss\"\r\n\r\nexport const addKeys = (language, caseStyle, currentKeyLine) => {\r\n    const array = []\r\n    currentKeyLine.forEach(({ code, ruUpper, enUpper, ru, en }) => {\r\n        let value\r\n        if (caseStyle) {\r\n            if (language === \"ru\") {\r\n                value = ruUpper\r\n            } else {\r\n                value = enUpper\r\n            }\r\n        } else {\r\n            if (language === \"ru\") {\r\n                value = ru\r\n            } else {\r\n                value = en\r\n            }\r\n        }\r\n        const KEY = `\r\n        <button class=\"key\" data-key=\"${code}\">\r\n            ${value}\r\n        </button>\r\n       `\r\n        array.push(KEY)\r\n    })\r\n    return array.map(x => x).join(\"\")\r\n}","export class CreateKey {\r\n  constructor (code, ru, en, ruUpper, enUpper) {\r\n      this.code = code\r\n      this.ru = ru\r\n      this.en = en\r\n      this.ruUpper = ruUpper\r\n      this.enUpper = enUpper\r\n  }\r\n}","import { CreateKey } from \"./createKeys\"\r\n\r\nexport const keysArray = [\r\n    new CreateKey(\"Backquote\", \"ё\", \"`\", \"Ё\", \"~\"),\r\n    new CreateKey(\"Digit1\", \"1\", \"1\", \"!\", \"!\"),\r\n    new CreateKey(\"Digit2\", \"2\", \"2\", \"@\", \"@\"),\r\n    new CreateKey(\"Digit3\", \"3\", \"3\", \"#\", \"#\"),\r\n    new CreateKey(\"Digit4\", \"4\", \"4\", \"$\", \"$\"),\r\n    new CreateKey(\"Digit5\", \"5\", \"5\", \"%\", \"%\"),\r\n    new CreateKey(\"Digit6\", \"6\", \"6\", \"^\", \"^\"),\r\n    new CreateKey(\"Digit7\", \"7\", \"7\", \"&\", \"&\"),\r\n    new CreateKey(\"Digit8\", \"8\", \"8\", \"*\", \"*\"),\r\n    new CreateKey(\"Digit9\", \"9\", \"9\", \"(\", \"(\"),\r\n    new CreateKey(\"Digit0\", \"0\", \"0\", \")\", \")\"),\r\n    new CreateKey(\"Minus\", \"-\", \"-\", \"_\", \"_\"),\r\n    new CreateKey(\"Equa\", \"=\", \"=\", \"+\", \"+\"),\r\n    new CreateKey(\"KeyQ\", \"й\", \"q\", \"Й\", \"Q\"),\r\n    new CreateKey(\"KeyW\", \"ц\", \"w\", \"Ц\", \"W\"),\r\n    new CreateKey(\"KeyE\", \"у\", \"e\", \"У\", \"E\"),\r\n    new CreateKey(\"KeyR\", \"к\", \"r\", \"К\", \"R\"),\r\n    new CreateKey(\"KeyT\", \"е\", \"t\", \"Е\", \"T\"),\r\n    new CreateKey(\"KeyY\", \"н\", \"y\", \"Н\", \"Y\"),\r\n    new CreateKey(\"KeyU\", \"г\", \"u\", \"Г\", \"U\"),\r\n    new CreateKey(\"KeyI\", \"ш\", \"i\", \"Ш\", \"I\"),\r\n    new CreateKey(\"KeyO\", \"щ\", \"o\", \"Щ\", \"O\"),\r\n    new CreateKey(\"KeyP\", \"з\", \"p\", \"З\", \"P\"),\r\n    new CreateKey(\"BracketLeft\", \"х\", \"[\", \"Х\", \"{\"),\r\n    new CreateKey(\"BracketRight\", \"ъ\", \"]\", \"Ъ\", \"}\"),\r\n    new CreateKey(\"Backslash\", \"\\\\\", \"\\\\\", \"/\", \"|\"),\r\n    new CreateKey(\"KeyA\", \"ф\", \"a\", \"Ф\", \"A\"),\r\n    new CreateKey(\"KeyS\", \"ы\", \"s\", \"Ы\", \"S\"),\r\n    new CreateKey(\"KeyD\", \"в\", \"d\", \"В\", \"D\"),\r\n    new CreateKey(\"KeyF\", \"а\", \"f\", \"А\", \"F\"),\r\n    new CreateKey(\"KeyG\", \"п\", \"g\", \"П\", \"G\"),\r\n    new CreateKey(\"KeyH\", \"р\", \"h\", \"Р\", \"H\"),\r\n    new CreateKey(\"KeyJ\", \"о\", \"j\", \"О\", \"J\"),\r\n    new CreateKey(\"KeyK\", \"л\", \"k\", \"Л\", \"K\"),\r\n    new CreateKey(\"KeyL\", \"д\", \"l\", \"Д\", \"L\"),\r\n    new CreateKey(\"Semicolon\", \"ж\", \";\", \"Ж\", \":\"),\r\n    new CreateKey(\"Quote\", \"э\", \"'\", \"Э\", \"\\\"\"),\r\n    new CreateKey(\"KeyZ\", \"я\", \"z\", \"Я\", \"Z\"),\r\n    new CreateKey(\"KeyX\", \"ч\", \"x\", \"Ч\", \"X\"),\r\n    new CreateKey(\"KeyC\", \"с\", \"c\", \"С\", \"C\"),\r\n    new CreateKey(\"KeyV\", \"м\", \"v\", \"М\", \"V\"),\r\n    new CreateKey(\"KeyB\", \"и\", \"b\", \"И\", \"B\"),\r\n    new CreateKey(\"KeyN\", \"т\", \"n\", \"Т\", \"N\"),\r\n    new CreateKey(\"KeyM\", \"ь\", \"m\", \"Ь\", \"M\"),\r\n    new CreateKey(\"Comma\", \"б\", \",\", \"Б\", \"<\"),\r\n    new CreateKey(\"Period\", \"ю\", \".\", \"Ю\", \">\"),\r\n    new CreateKey(\"Slash\", \".\", \"/\", \",\", \"?\")\r\n]","import \"../sass/index.sass\"\r\nimport { addKeys } from \"./addKeys\"\r\nimport { createBoard } from \"./createKeyboard\"\r\nimport { keysArray } from \"./arrKeys\"\r\n\r\nconst BODY = document.querySelector(\"body\")\r\nconst NUM = \"1234567890-=\"\r\n\r\nlet isAlt = false\r\nlet isCtrl = false\r\nlet isShift = false\r\nlet toUpperCase = false\r\nlet currentLanguage\r\n\r\nif (!localStorage.getItem(\"language\")) {\r\n    currentLanguage = \"en\"\r\n} else {\r\n    currentLanguage = localStorage.getItem(\"language\")\r\n}\r\n\r\nBODY.innerHTML = `\r\n    <div class=\"wrapper\">\r\n        <textarea class=\"result\"></textarea>\r\n        <div class=\"keyboard\">  \r\n        </div>\r\n        <p class=\"info\">Смена раскладки - Ctrl + Alt</p>\r\n    </div>\r\n`\r\ncreateBoard(currentLanguage, toUpperCase, NUM)\r\nconst TEXTAREA = document.querySelector(\"textarea\")\r\nconst BOARD__KEYS = document.querySelectorAll(\".keyboard__keys\")\r\nconst BACK_QOUTE = document.querySelector(\"#backqoute\")\r\n\r\nconst upperCaseKey = () => {\r\n    BACK_QOUTE.innerHTML = addKeys(currentLanguage, toUpperCase, keysArray.slice(0, 1))\r\n    BOARD__KEYS[1].innerHTML = addKeys(currentLanguage, toUpperCase, keysArray.slice(13, 26))\r\n    BOARD__KEYS[2].innerHTML = addKeys(currentLanguage, toUpperCase, keysArray.slice(26, 37))\r\n    BOARD__KEYS[3].innerHTML = addKeys(currentLanguage, toUpperCase, keysArray.slice(37))\r\n}\r\n\r\nconst shiftClick = () => {\r\n    upperCaseKey()\r\n    BOARD__KEYS[0].innerHTML = addKeys(currentLanguage, toUpperCase, keysArray.slice(1, 13))\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", (event) => {\r\n    const currentKey = document.querySelector(\".key[data-key='\" + event.code + \"'\")\r\n    if (currentKey !== null) {\r\n        currentKey.classList.add(\"key__active\")\r\n        switch (event.code) {\r\n        case \"Backspace\":\r\n        case \"Enter\":\r\n        case \"Delete\":\r\n            TEXTAREA.focus()\r\n            break\r\n        case \"Tab\":\r\n            event.preventDefault()\r\n            TEXTAREA.value += \"    \"\r\n            break\r\n        case \"CapsLock\":\r\n            event.preventDefault()\r\n            toUpperCase = !toUpperCase\r\n            upperCaseKey()\r\n            break\r\n        case \"Space\":\r\n            event.preventDefault()\r\n            TEXTAREA.value += \"  \"\r\n            break\r\n        case \"ControlLeft\":\r\n            event.preventDefault()\r\n            isCtrl = true\r\n            break\r\n        case \"AltLeft\":\r\n            event.preventDefault()\r\n            isAlt = true\r\n            break\r\n        case \"ShiftLeft\":\r\n        case \"ShiftRight\":\r\n            if (!isShift) {\r\n                event.preventDefault()\r\n                toUpperCase = !toUpperCase\r\n                shiftClick()\r\n                isShift = true\r\n            }\r\n            break\r\n        default:\r\n            event.preventDefault()\r\n            if (event.code.includes(\"Arrow\")) {\r\n                TEXTAREA.value += currentKey.innerText\r\n            }\r\n            keysArray.forEach(({ code }) => {\r\n                if (event.code === code) {\r\n                    TEXTAREA.value += currentKey.innerText\r\n                }\r\n            })\r\n            break\r\n        }\r\n\r\n        if (isAlt && isCtrl) {\r\n            currentLanguage === \"en\" ? currentLanguage = \"ru\" : currentLanguage = \"en\"\r\n            localStorage.setItem(\"language\", currentLanguage)\r\n            upperCaseKey()\r\n        }\r\n        event.stopPropagation()\r\n    }\r\n})\r\n\r\ndocument.addEventListener(\"keyup\", (event) => {\r\n    event.preventDefault()\r\n    const currentKey = document.querySelector(\".key[data-key='\" + event.code + \"'\")\r\n    if (currentKey !== null) {\r\n        currentKey.classList.remove(\"key__active\")\r\n        if ((event.code === \"ShiftLeft\" || event.code === \"ShiftRight\") && isShift) {\r\n            toUpperCase = !toUpperCase\r\n            shiftClick()\r\n            isShift = false\r\n        }\r\n        isAlt = false\r\n        isCtrl = false\r\n    }\r\n})\r\n\r\nfunction getCaretPos () {\r\n    TEXTAREA.focus()\r\n    if (TEXTAREA.selectionStart) return TEXTAREA.selectionStart\r\n    else if (document.selection) {\r\n        const sel = document.selection.createRange()\r\n        const clone = sel.duplicate()\r\n        sel.collapse(true)\r\n        clone.moveToElementText(TEXTAREA)\r\n        clone.setEndPoint(\"EndToEnd\", sel)\r\n        return clone.text.length\r\n    }\r\n    return 0\r\n}\r\n\r\ndocument.addEventListener(\"mousedown\", (event) => {\r\n    if (event.target.classList.contains(\"key\")) {\r\n        const f = keysArray.find(({ code }) => code === event.target.dataset.key)\r\n        if (f || event.target.dataset.key.includes(\"Arrow\")) { TEXTAREA.value += event.target.innerText }\r\n    }\r\n    switch (event.target.dataset.key) {\r\n    case \"Tab\" :\r\n        TEXTAREA.value += \"    \"\r\n        break\r\n    case \"CapsLock\":\r\n        toUpperCase = !toUpperCase\r\n        upperCaseKey()\r\n        break\r\n    case \"Space\":\r\n        TEXTAREA.value += \"  \"\r\n        break\r\n    case \"ShiftLeft\":\r\n    case \"ShiftRight\":\r\n        if (!isShift) {\r\n            event.preventDefault()\r\n            toUpperCase = !toUpperCase\r\n            shiftClick()\r\n            isShift = true\r\n        }\r\n        break\r\n    case \"Backspace\":\r\n        if (TEXTAREA.value.length > 0) {\r\n            TEXTAREA.setRangeText(\"\", getCaretPos() - 1, getCaretPos(), \"select\")\r\n        }\r\n        break\r\n    case \"Delete\":\r\n        if (getCaretPos() !== TEXTAREA.value.length) {\r\n            TEXTAREA.setRangeText(\"\", getCaretPos(), getCaretPos() + 1, \"select\")\r\n        }\r\n        break\r\n    case \"Enter\":\r\n        TEXTAREA.setRangeText(\"\\n\", getCaretPos(), getCaretPos(), \"select\")\r\n        break\r\n    default:\r\n        break\r\n    }\r\n})\r\n\r\ndocument.addEventListener(\"mouseup\", (event) => {\r\n    if ((event.target.dataset.key === \"ShiftLeft\" || event.target.dataset.key === \"ShiftRight\") && isShift) {\r\n        toUpperCase = !toUpperCase\r\n        shiftClick()\r\n        isShift = false\r\n    }\r\n})\r\n\r\n\r\n\r\nalert(\"Не вели казнить! Вели слово молвить! Сжалься над моим невежеством и проверь в последний день кроссчека. Да прибудет с тобой бубен и антибаг божий!!!\");","import { addKeys } from \"./addKeys\"\r\nimport { keysArray } from \"./arrKeys\"\r\n\r\nexport const createBoard = (currentLanguage, toUpperCase) => {\r\n    const KEYBOARD = document.querySelector(\".keyboard\")\r\n    KEYBOARD.innerHTML = `\r\n    <div class=\"keyboard__line\">\r\n        <div id=\"backqoute\">\r\n            ${addKeys(currentLanguage, toUpperCase, keysArray.slice(0, 1))} \r\n        </div>\r\n        <div class=\"keyboard__keys\">\r\n            ${addKeys(currentLanguage, toUpperCase, keysArray.slice(1, 13))} \r\n        </div>\r\n        <button class=\"key backspace\" data-key=\"Backspace\">Backspace</button>\r\n    </div>\r\n    <div class=\"keyboard__letters\">\r\n        <div class=\"keyboard__line\">\r\n            <button class=\"key tab\" data-key=\"Tab\">\r\n                Tab\r\n            </button>\r\n            <div class=\"keyboard__keys\">\r\n                ${addKeys(currentLanguage, toUpperCase, keysArray.slice(13, 26))}\r\n            </div>\r\n            <button class=\"key del\" data-key=\"Delete\">\r\n                Del\r\n            </button>\r\n        </div>\r\n        <div class=\"keyboard__line\">\r\n            <button class=\"key capslock key__control\" data-key=\"CapsLock\">\r\n                Caps Lock\r\n            </button>\r\n            <div class=\"keyboard__keys\">\r\n                ${addKeys(currentLanguage, toUpperCase, keysArray.slice(26, 37))}\r\n            </div>\r\n            <button class=\"key enter\" data-key=\"Enter\">\r\n                Enter\r\n            </button>\r\n        </div>\r\n        <div class=\"keyboard__line\">\r\n            <button class=\"key shift-l key__control\" data-key=\"ShiftLeft\">\r\n                Shift\r\n            </button>\r\n            <div class=\"keyboard__keys\">\r\n                ${addKeys(currentLanguage, toUpperCase, keysArray.slice(37))}\r\n            </div>\r\n            <button class=\"key\" data-key=\"ArrowUp\">\r\n            &#9650;\r\n            </button>\r\n            <button class=\"key key__control\" data-key=\"ShiftRight\">\r\n                Shift\r\n            </button>\r\n        </div>\r\n        <div class=\"keyboard__line\">\r\n            <button class=\"key ctrl-l\" data-key=\"ControlLeft\">\r\n                Ctrl\r\n            </button>\r\n            <button class=\"key\" data-key=\"MetaLeft\">\r\n                Win\r\n            </button>\r\n            <button class=\"key \" data-key=\"AltLeft\">\r\n                Alt\r\n            </button>\r\n            <button class=\"key space key__space\" data-key=\"Space\">\r\n                \r\n            </button>\r\n            <button class=\"key\" data-key=\"AltRight\">\r\n                Alt\r\n            </button>\r\n            <button class=\"key\" data-key=\"ControlRight\">\r\n                Ctrl\r\n            </button>\r\n            <button class=\"key\" data-key=\"ArrowLeft\">\r\n            &#9668;\r\n            </button>\r\n            <button class=\"key\" data-key=\"ArrowDown\">\r\n            &#9660;\r\n            </button>\r\n            <button class=\"key\" data-key=\"ArrowRight\">\r\n            &#9658;\r\n            </button> \r\n        </div>\r\n    </div>\r\n    `\r\n}"],"names":["addKeys","language","caseStyle","currentKeyLine","array","forEach","code","ruUpper","enUpper","ru","en","value","KEY","push","map","x","join","CreateKey","constructor","this","keysArray","BODY","document","querySelector","currentLanguage","isAlt","isCtrl","isShift","toUpperCase","localStorage","getItem","innerHTML","slice","createBoard","TEXTAREA","BOARD__KEYS","querySelectorAll","BACK_QOUTE","upperCaseKey","shiftClick","getCaretPos","focus","selectionStart","selection","sel","createRange","clone","duplicate","collapse","moveToElementText","setEndPoint","text","length","addEventListener","event","currentKey","classList","add","preventDefault","includes","innerText","setItem","stopPropagation","remove","target","contains","find","dataset","key","setRangeText","alert"],"sourceRoot":""}